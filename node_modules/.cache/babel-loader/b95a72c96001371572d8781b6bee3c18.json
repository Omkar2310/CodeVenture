{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/media/sky/G/webdev/CodeVenture/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{FaArrowAltCircleLeft,FaArrowAltCircleRight}from'react-icons/fa';import{SliderData}from'./imageData';import'./imageSlider.styles.css';var ImageSlider=function ImageSlider(){var slides=SliderData;// const [current,setCurrent] = useState(0)\n// const length = slides.length    \n// const nextSlide = () => {\n//     setCurrent(current === length - 1 ? 0 : current + 1);\n//   };\n//   const prevSlide = () => {\n//     setCurrent(current === 0 ? length - 1 : current - 1);\n//   };\n//   const \n//   if (!Array.isArray(slides) || slides.length <= 0) {\n//     return null;\n//   }\nvar _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),curr=_React$useState2[0],setCurr=_React$useState2[1];var length=slides.length;var goToNext=function goToNext(){// Check if we've reached the final slide in the array\n// If so, go back to 0, else curr + 1\nsetCurr(curr===length-1?0:curr+1);};// useEffect will run at every re-render\nReact.useEffect(function(){// At every render, set a new timeout to go to the next slide\nsetTimeout(goToNext,4000);// And, when unmounting <Slider />, clear the timeout\n// See the reactjs.org docs on hooks for more info\nreturn function(){clearTimeout(goToNext);};});// return (\n//        <div className='slider'>\n//     <FaArrowAltCircleLeft className='left-arrow' onClick={prevSlide} />\n//     <FaArrowAltCircleRight className='right-arrow' onClick={nextSlide} />\n//     {SliderData.map((slide,index) => {\n//         return (\n//             <div\n//                 className={index === current ? 'slide active' : 'slide'}\n//                 key={index}\n//             >\n//             {index === current && (\n//                 <img src={slide.image} alt='' className='image' />\n//             )}\n//             </div>\n//         );\n//     })\n//     }\n// </div>\n// );\nif(!Array.isArray(slides)||length<=0){return null;}return/*#__PURE__*/_jsx(\"section\",{className:\"slider\",children:slides.map(function(s,i){return/*#__PURE__*/_jsxs(\"div\",{className:i===curr?\"slide active\":\"slide\",\"aria-hidden\":i!==curr,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:s.title}),/*#__PURE__*/_jsx(\"h2\",{children:s.subtitle})]}),i===curr&&/*#__PURE__*/_jsx(\"img\",{className:\"image\",src:s.image})]},s.title);})});};export default ImageSlider;","map":{"version":3,"sources":["/media/sky/G/webdev/CodeVenture/src/components/imageSlider/imageslid.components.jsx"],"names":["React","useState","FaArrowAltCircleLeft","FaArrowAltCircleRight","SliderData","ImageSlider","slides","curr","setCurr","length","goToNext","useEffect","setTimeout","clearTimeout","Array","isArray","map","s","i","title","subtitle","image"],"mappings":"8OAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,KAA6B,OAA7B,CACA,OAAQC,oBAAR,CAA6BC,qBAA7B,KAAyD,gBAAzD,CACA,OAASC,UAAT,KAA2B,aAA3B,CACA,MAAO,0BAAP,CACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,GAAMC,CAAAA,MAAM,CAAGF,UAAf,CACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAjBsB,oBAmBAJ,KAAK,CAACC,QAAN,CAAe,CAAf,CAnBA,oDAmBjBM,IAnBiB,qBAmBXC,OAnBW,wBAoBhBC,CAAAA,MApBgB,CAoBLH,MApBK,CAoBhBG,MApBgB,CAsBxB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB;AACA;AACAF,OAAO,CAACD,IAAI,GAAKE,MAAM,CAAG,CAAlB,CAAsB,CAAtB,CAA0BF,IAAI,CAAG,CAAlC,CAAP,CACD,CAJD,CAMA;AACAP,KAAK,CAACW,SAAN,CAAgB,UAAM,CACpB;AACAC,UAAU,CAACF,QAAD,CAAW,IAAX,CAAV,CACA;AACA;AACA,MAAO,WAAW,CAChBG,YAAY,CAACH,QAAD,CAAZ,CACD,CAFD,CAGD,CARD,EAUE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,GAAI,CAACI,KAAK,CAACC,OAAN,CAAcT,MAAd,CAAD,EAA0BG,MAAM,EAAI,CAAxC,CAA2C,CACzC,MAAO,KAAP,CACD,CAED,mBACE,gBAAS,SAAS,CAAC,QAAnB,UACGH,MAAM,CAACU,GAAP,CAAW,SAACC,CAAD,CAAIC,CAAJ,qBACV,aACE,SAAS,CAAEA,CAAC,GAAKX,IAAN,CAAa,cAAb,CAA8B,OAD3C,CAGE,cAAaW,CAAC,GAAKX,IAHrB,wBAKE,oCACE,oBAAKU,CAAC,CAACE,KAAP,EADF,cAEE,oBAAKF,CAAC,CAACG,QAAP,EAFF,GALF,CASGF,CAAC,GAAKX,IAAN,eACC,YAAK,SAAS,CAAC,OAAf,CAAuB,GAAG,CAAEU,CAAC,CAACI,KAA9B,EAVJ,GAEOJ,CAAC,CAACE,KAFT,CADU,EAAX,CADH,EADF,CAmBH,CAnFD,CAqFA,cAAed,CAAAA,WAAf","sourcesContent":["import React,{useState} from 'react'\nimport {FaArrowAltCircleLeft,FaArrowAltCircleRight} from 'react-icons/fa';\nimport { SliderData } from './imageData';\nimport './imageSlider.styles.css'\nconst ImageSlider = () => {\n    const slides = SliderData\n    // const [current,setCurrent] = useState(0)\n    // const length = slides.length    \n\n    // const nextSlide = () => {\n    //     setCurrent(current === length - 1 ? 0 : current + 1);\n    //   };\n    \n    //   const prevSlide = () => {\n    //     setCurrent(current === 0 ? length - 1 : current - 1);\n    //   };\n      \n    //   const \n\n    //   if (!Array.isArray(slides) || slides.length <= 0) {\n    //     return null;\n    //   }\n\n  const [curr, setCurr] = React.useState(0);\n  const { length } = slides;\n  \n  const goToNext = () => {\n    // Check if we've reached the final slide in the array\n    // If so, go back to 0, else curr + 1\n    setCurr(curr === length - 1 ? 0 : curr + 1);\n  }\n  \n  // useEffect will run at every re-render\n  React.useEffect(() => {\n    // At every render, set a new timeout to go to the next slide\n    setTimeout(goToNext, 4000);\n    // And, when unmounting <Slider />, clear the timeout\n    // See the reactjs.org docs on hooks for more info\n    return function() {\n      clearTimeout(goToNext);\n    }\n  })\n\n    // return (\n    //        <div className='slider'>\n    //     <FaArrowAltCircleLeft className='left-arrow' onClick={prevSlide} />\n    //     <FaArrowAltCircleRight className='right-arrow' onClick={nextSlide} />\n    //     {SliderData.map((slide,index) => {\n    //         return (\n    //             <div\n    //                 className={index === current ? 'slide active' : 'slide'}\n    //                 key={index}\n    //             >\n    //             {index === current && (\n    //                 <img src={slide.image} alt='' className='image' />\n    //             )}\n    //             </div>\n    //         );\n    //     })\n\n    //     }\n    // </div>\n    // );\n\n    if (!Array.isArray(slides) || length <= 0) {\n      return null;\n    }\n    \n    return (\n      <section className=\"slider\">\n        {slides.map((s, i) => (\n          <div\n            className={i === curr ? \"slide active\" : \"slide\"}\n            key={s.title}\n            aria-hidden={i !== curr}\n          >\n            <div>\n              <h1>{s.title}</h1>\n              <h2>{s.subtitle}</h2>\n            </div>\n            {i === curr && (\n              <img className=\"image\" src={s.image} />\n            )}\n          </div>\n        ))}\n      </section>\n    );  \n};\n\nexport default ImageSlider;\n"]},"metadata":{},"sourceType":"module"}