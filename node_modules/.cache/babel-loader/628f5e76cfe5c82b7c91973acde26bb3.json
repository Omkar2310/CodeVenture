{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/sky/G/webdev/omweb/src/components/imageSlider/imageslid.components.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { FaArrowAltCircleLeft, FaArrowAltCircleRight } from 'react-icons/fa';\nimport { SliderData } from './imageData';\nimport './imageSlider.styles.css';\n\nconst ImageSlider = () => {\n  _s();\n\n  const slides = SliderData; // const [current,setCurrent] = useState(0)\n  // const length = slides.length    \n  // const nextSlide = () => {\n  //     setCurrent(current === length - 1 ? 0 : current + 1);\n  //   };\n  //   const prevSlide = () => {\n  //     setCurrent(current === 0 ? length - 1 : current - 1);\n  //   };\n  //   const \n  //   if (!Array.isArray(slides) || slides.length <= 0) {\n  //     return null;\n  //   }\n\n  const [curr, setCurr] = React.useState(0);\n  const {\n    length\n  } = slides;\n\n  const goToNext = () => {\n    // Check if we've reached the final slide in the array\n    // If so, go back to 0, else curr + 1\n    setCurr(curr === length - 1 ? 0 : curr + 1);\n  }; // useEffect will run at every re-render\n\n\n  React.useEffect(() => {\n    // At every render, set a new timeout to go to the next slide\n    setTimeout(goToNext, 4000); // And, when unmounting <Slider />, clear the timeout\n    // See the reactjs.org docs on hooks for more info\n\n    return function () {\n      clearTimeout(goToNext);\n    };\n  }); // return (\n  //        <div className='slider'>\n  //     <FaArrowAltCircleLeft className='left-arrow' onClick={prevSlide} />\n  //     <FaArrowAltCircleRight className='right-arrow' onClick={nextSlide} />\n  //     {SliderData.map((slide,index) => {\n  //         return (\n  //             <div\n  //                 className={index === current ? 'slide active' : 'slide'}\n  //                 key={index}\n  //             >\n  //             {index === current && (\n  //                 <img src={slide.image} alt='' className='image' />\n  //             )}\n  //             </div>\n  //         );\n  //     })\n  //     }\n  // </div>\n  // );\n\n  if (!Array.isArray(slides) || length <= 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"slider\",\n    children: slides.map((s, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: i === curr ? \"slide active\" : \"slide\",\n      \"aria-hidden\": i !== curr,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: s.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: s.subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), i === curr && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"image\",\n        src: s.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this)]\n    }, s.title, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ImageSlider, \"gWXkG9yR6KANghhymC7ZEtLY3KY=\");\n\n_c = ImageSlider;\nexport default ImageSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageSlider\");","map":{"version":3,"sources":["/media/sky/G/webdev/omweb/src/components/imageSlider/imageslid.components.jsx"],"names":["React","useState","FaArrowAltCircleLeft","FaArrowAltCircleRight","SliderData","ImageSlider","slides","curr","setCurr","length","goToNext","useEffect","setTimeout","clearTimeout","Array","isArray","map","s","i","title","subtitle","image"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,oBAAR,EAA6BC,qBAA7B,QAAyD,gBAAzD;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAO,0BAAP;;AACA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAMC,MAAM,GAAGF,UAAf,CADsB,CAEtB;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEF,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACC,QAAN,CAAe,CAAf,CAAxB;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAaH,MAAnB;;AAEA,QAAMI,QAAQ,GAAG,MAAM;AACrB;AACA;AACAF,IAAAA,OAAO,CAACD,IAAI,KAAKE,MAAM,GAAG,CAAlB,GAAsB,CAAtB,GAA0BF,IAAI,GAAG,CAAlC,CAAP;AACD,GAJD,CAtBwB,CA4BxB;;;AACAP,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpB;AACAC,IAAAA,UAAU,CAACF,QAAD,EAAW,IAAX,CAAV,CAFoB,CAGpB;AACA;;AACA,WAAO,YAAW;AAChBG,MAAAA,YAAY,CAACH,QAAD,CAAZ;AACD,KAFD;AAGD,GARD,EA7BwB,CAuCtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAI,CAACI,KAAK,CAACC,OAAN,CAAcT,MAAd,CAAD,IAA0BG,MAAM,IAAI,CAAxC,EAA2C;AACzC,WAAO,IAAP;AACD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAC,QAAnB;AAAA,cACGH,MAAM,CAACU,GAAP,CAAW,CAACC,CAAD,EAAIC,CAAJ,kBACV;AACE,MAAA,SAAS,EAAEA,CAAC,KAAKX,IAAN,GAAa,cAAb,GAA8B,OAD3C;AAGE,qBAAaW,CAAC,KAAKX,IAHrB;AAAA,8BAKE;AAAA,gCACE;AAAA,oBAAKU,CAAC,CAACE;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKF,CAAC,CAACG;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EASGF,CAAC,KAAKX,IAAN,iBACC;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,GAAG,EAAEU,CAAC,CAACI;AAA9B;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA,OAEOJ,CAAC,CAACE,KAFT;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAmBH,CAnFD;;GAAMd,W;;KAAAA,W;AAqFN,eAAeA,WAAf","sourcesContent":["import React,{useState} from 'react'\nimport {FaArrowAltCircleLeft,FaArrowAltCircleRight} from 'react-icons/fa';\nimport { SliderData } from './imageData';\nimport './imageSlider.styles.css'\nconst ImageSlider = () => {\n    const slides = SliderData\n    // const [current,setCurrent] = useState(0)\n    // const length = slides.length    \n\n    // const nextSlide = () => {\n    //     setCurrent(current === length - 1 ? 0 : current + 1);\n    //   };\n    \n    //   const prevSlide = () => {\n    //     setCurrent(current === 0 ? length - 1 : current - 1);\n    //   };\n      \n    //   const \n\n    //   if (!Array.isArray(slides) || slides.length <= 0) {\n    //     return null;\n    //   }\n\n  const [curr, setCurr] = React.useState(0);\n  const { length } = slides;\n  \n  const goToNext = () => {\n    // Check if we've reached the final slide in the array\n    // If so, go back to 0, else curr + 1\n    setCurr(curr === length - 1 ? 0 : curr + 1);\n  }\n  \n  // useEffect will run at every re-render\n  React.useEffect(() => {\n    // At every render, set a new timeout to go to the next slide\n    setTimeout(goToNext, 4000);\n    // And, when unmounting <Slider />, clear the timeout\n    // See the reactjs.org docs on hooks for more info\n    return function() {\n      clearTimeout(goToNext);\n    }\n  })\n\n    // return (\n    //        <div className='slider'>\n    //     <FaArrowAltCircleLeft className='left-arrow' onClick={prevSlide} />\n    //     <FaArrowAltCircleRight className='right-arrow' onClick={nextSlide} />\n    //     {SliderData.map((slide,index) => {\n    //         return (\n    //             <div\n    //                 className={index === current ? 'slide active' : 'slide'}\n    //                 key={index}\n    //             >\n    //             {index === current && (\n    //                 <img src={slide.image} alt='' className='image' />\n    //             )}\n    //             </div>\n    //         );\n    //     })\n\n    //     }\n    // </div>\n    // );\n\n    if (!Array.isArray(slides) || length <= 0) {\n      return null;\n    }\n    \n    return (\n      <section className=\"slider\">\n        {slides.map((s, i) => (\n          <div\n            className={i === curr ? \"slide active\" : \"slide\"}\n            key={s.title}\n            aria-hidden={i !== curr}\n          >\n            <div>\n              <h1>{s.title}</h1>\n              <h2>{s.subtitle}</h2>\n            </div>\n            {i === curr && (\n              <img className=\"image\" src={s.image} />\n            )}\n          </div>\n        ))}\n      </section>\n    );  \n};\n\nexport default ImageSlider;\n"]},"metadata":{},"sourceType":"module"}