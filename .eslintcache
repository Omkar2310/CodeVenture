[{"/media/sky/G/webdev/CodeVenture/src/index.js":"1","/media/sky/G/webdev/CodeVenture/src/App.js":"2","/media/sky/G/webdev/CodeVenture/src/pages/homepage/homepage.components.jsx":"3","/media/sky/G/webdev/CodeVenture/src/components/navbar/navbar.component.jsx":"4","/media/sky/G/webdev/CodeVenture/src/components/imageSlider/imageslid.components.jsx":"5","/media/sky/G/webdev/CodeVenture/src/components/imageSlider/imageData.js":"6","/media/sky/G/webdev/CodeVenture/src/components/titleMessage/titlemsg.components.jsx":"7","/media/sky/G/webdev/CodeVenture/src/pages/homepage/particlesOptions.js":"8"},{"size":177,"mtime":1610704572187,"results":"9","hashOfConfig":"10"},{"size":196,"mtime":1610711112886,"results":"11","hashOfConfig":"10"},{"size":480,"mtime":1610711118194,"results":"12","hashOfConfig":"10"},{"size":1112,"mtime":1610709953975,"results":"13","hashOfConfig":"10"},{"size":2573,"mtime":1610707413944,"results":"14","hashOfConfig":"10"},{"size":597,"mtime":1610701386073,"results":"15","hashOfConfig":"10"},{"size":1233,"mtime":1610710087164,"results":"16","hashOfConfig":"10"},{"size":1866,"mtime":1602671269000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"ky9955",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/media/sky/G/webdev/CodeVenture/src/index.js",[],["37","38"],"/media/sky/G/webdev/CodeVenture/src/App.js",[],"/media/sky/G/webdev/CodeVenture/src/pages/homepage/homepage.components.jsx",[],"/media/sky/G/webdev/CodeVenture/src/components/navbar/navbar.component.jsx",["39","40"],"import React from 'react'\nimport {Navbar,Nav,NavDropdown, Container} from 'react-bootstrap';\nconst NavBar = () => (\n\n<Navbar collapseOnSelect fixed='top' bg=\"primary\" variant=\"dark\" expand=\"sm\">\n  <Navbar.Brand href=\"#home\">CodeVentures</Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n  <Navbar.Collapse  id=\"basic-navbar-nav\">\n    <Nav className=\"ml-auto\">\n      <Nav.Link  href=\"#home\">Home</Nav.Link>\n      <Nav.Link href=\"#link1\">About</Nav.Link>\n      <Nav.Link  href=\"#link2\">Skills</Nav.Link>\n      <Nav.Link  href=\"#link3\">Project</Nav.Link>\n      <Nav.Link href=\"#link4\">Contact</Nav.Link>\n      {/* <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n        <NavDropdown.Divider />\n        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n      </NavDropdown> */}\n    </Nav>\n  </Navbar.Collapse>\n</Navbar>\n\n)\n\nexport default NavBar;","/media/sky/G/webdev/CodeVenture/src/components/imageSlider/imageslid.components.jsx",["41","42","43","44"],"import React,{useState} from 'react'\nimport {FaArrowAltCircleLeft,FaArrowAltCircleRight} from 'react-icons/fa';\nimport { SliderData } from './imageData';\nimport './imageSlider.styles.css'\nconst ImageSlider = () => {\n    const slides = SliderData\n    // const [current,setCurrent] = useState(0)\n    // const length = slides.length    \n\n    // const nextSlide = () => {\n    //     setCurrent(current === length - 1 ? 0 : current + 1);\n    //   };\n    \n    //   const prevSlide = () => {\n    //     setCurrent(current === 0 ? length - 1 : current - 1);\n    //   };\n      \n    //   const \n\n    //   if (!Array.isArray(slides) || slides.length <= 0) {\n    //     return null;\n    //   }\n\n  const [curr, setCurr] = React.useState(0);\n  const { length } = slides;\n  \n  const goToNext = () => {\n    // Check if we've reached the final slide in the array\n    // If so, go back to 0, else curr + 1\n    setCurr(curr === length - 1 ? 0 : curr + 1);\n  }\n  \n  // useEffect will run at every re-render\n  React.useEffect(() => {\n    // At every render, set a new timeout to go to the next slide\n    setTimeout(goToNext, 4000);\n    // And, when unmounting <Slider />, clear the timeout\n    // See the reactjs.org docs on hooks for more info\n    return function() {\n      clearTimeout(goToNext);\n    }\n  })\n\n    // return (\n    //        <div className='slider'>\n    //     <FaArrowAltCircleLeft className='left-arrow' onClick={prevSlide} />\n    //     <FaArrowAltCircleRight className='right-arrow' onClick={nextSlide} />\n    //     {SliderData.map((slide,index) => {\n    //         return (\n    //             <div\n    //                 className={index === current ? 'slide active' : 'slide'}\n    //                 key={index}\n    //             >\n    //             {index === current && (\n    //                 <img src={slide.image} alt='' className='image' />\n    //             )}\n    //             </div>\n    //         );\n    //     })\n\n    //     }\n    // </div>\n    // );\n\n    if (!Array.isArray(slides) || length <= 0) {\n      return null;\n    }\n    \n    return (\n      <section className=\"slider\">\n        {slides.map((s, i) => (\n          <div\n            className={i === curr ? \"slide active\" : \"slide\"}\n            key={s.title}\n            aria-hidden={i !== curr}\n          >\n            <div>\n              <h1>{s.title}</h1>\n              <h2>{s.subtitle}</h2>\n            </div>\n            {i === curr && (\n              <img className=\"image\" src={s.image} />\n            )}\n          </div>\n        ))}\n      </section>\n    );  \n};\n\nexport default ImageSlider;\n","/media/sky/G/webdev/CodeVenture/src/components/imageSlider/imageData.js",[],"/media/sky/G/webdev/CodeVenture/src/components/titleMessage/titlemsg.components.jsx",[],"/media/sky/G/webdev/CodeVenture/src/pages/homepage/particlesOptions.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":2,"column":20,"nodeType":"51","messageId":"52","endLine":2,"endColumn":31},{"ruleId":"49","severity":1,"message":"53","line":2,"column":33,"nodeType":"51","messageId":"52","endLine":2,"endColumn":42},{"ruleId":"49","severity":1,"message":"54","line":1,"column":15,"nodeType":"51","messageId":"52","endLine":1,"endColumn":23},{"ruleId":"49","severity":1,"message":"55","line":2,"column":9,"nodeType":"51","messageId":"52","endLine":2,"endColumn":29},{"ruleId":"49","severity":1,"message":"56","line":2,"column":30,"nodeType":"51","messageId":"52","endLine":2,"endColumn":51},{"ruleId":"57","severity":1,"message":"58","line":82,"column":15,"nodeType":"59","endLine":82,"endColumn":54},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'useState' is defined but never used.","'FaArrowAltCircleLeft' is defined but never used.","'FaArrowAltCircleRight' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]