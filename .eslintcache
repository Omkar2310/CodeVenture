[{"/media/sky/G/webdev/CodeVenture/src/index.js":"1","/media/sky/G/webdev/CodeVenture/src/App.js":"2","/media/sky/G/webdev/CodeVenture/src/pages/homepage/homepage.components.jsx":"3","/media/sky/G/webdev/CodeVenture/src/components/navbar/navbar.component.jsx":"4","/media/sky/G/webdev/CodeVenture/src/components/imageSlider/imageslid.components.jsx":"5","/media/sky/G/webdev/CodeVenture/src/components/imageSlider/imageData.js":"6","/media/sky/G/webdev/CodeVenture/src/components/titleMessage/titlemsg.components.jsx":"7","/media/sky/G/webdev/CodeVenture/src/pages/homepage/particlesOptions.js":"8","/media/sky/G/webdev/CodeVenture/src/pages/about/about.components.jsx":"9","/media/sky/G/webdev/CodeVenture/src/pages/skills/skills.components.jsx":"10","/media/sky/G/webdev/CodeVenture/src/pages/skills/skillsdata.js":"11","/media/sky/G/webdev/CodeVenture/src/pages/contact/contact.components.jsx":"12","/media/sky/G/webdev/CodeVenture/src/components/footer/footer.components.jsx":"13"},{"size":177,"mtime":1610704572187,"results":"14","hashOfConfig":"15"},{"size":196,"mtime":1610711112886,"results":"16","hashOfConfig":"15"},{"size":1752,"mtime":1610779339292,"results":"17","hashOfConfig":"15"},{"size":1211,"mtime":1610776895342,"results":"18","hashOfConfig":"15"},{"size":2573,"mtime":1610707413944,"results":"19","hashOfConfig":"15"},{"size":597,"mtime":1610701386073,"results":"20","hashOfConfig":"15"},{"size":1233,"mtime":1610772003878,"results":"21","hashOfConfig":"15"},{"size":1866,"mtime":1602671269000,"results":"22","hashOfConfig":"15"},{"size":3265,"mtime":1610778314742,"results":"23","hashOfConfig":"15"},{"size":6104,"mtime":1610778487049,"results":"24","hashOfConfig":"15"},{"size":5412,"mtime":1610775528101,"results":"25","hashOfConfig":"15"},{"size":2698,"mtime":1610779174106,"results":"26","hashOfConfig":"15"},{"size":270,"mtime":1610779366786,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"ky9955",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/sky/G/webdev/CodeVenture/src/index.js",[],["56","57"],"/media/sky/G/webdev/CodeVenture/src/App.js",[],"/media/sky/G/webdev/CodeVenture/src/pages/homepage/homepage.components.jsx",[],"/media/sky/G/webdev/CodeVenture/src/components/navbar/navbar.component.jsx",["58","59"],"/media/sky/G/webdev/CodeVenture/src/components/imageSlider/imageslid.components.jsx",["60","61","62","63"],"import React,{useState} from 'react'\nimport {FaArrowAltCircleLeft,FaArrowAltCircleRight} from 'react-icons/fa';\nimport { SliderData } from './imageData';\nimport './imageSlider.styles.css'\nconst ImageSlider = () => {\n    const slides = SliderData\n    // const [current,setCurrent] = useState(0)\n    // const length = slides.length    \n\n    // const nextSlide = () => {\n    //     setCurrent(current === length - 1 ? 0 : current + 1);\n    //   };\n    \n    //   const prevSlide = () => {\n    //     setCurrent(current === 0 ? length - 1 : current - 1);\n    //   };\n      \n    //   const \n\n    //   if (!Array.isArray(slides) || slides.length <= 0) {\n    //     return null;\n    //   }\n\n  const [curr, setCurr] = React.useState(0);\n  const { length } = slides;\n  \n  const goToNext = () => {\n    // Check if we've reached the final slide in the array\n    // If so, go back to 0, else curr + 1\n    setCurr(curr === length - 1 ? 0 : curr + 1);\n  }\n  \n  // useEffect will run at every re-render\n  React.useEffect(() => {\n    // At every render, set a new timeout to go to the next slide\n    setTimeout(goToNext, 4000);\n    // And, when unmounting <Slider />, clear the timeout\n    // See the reactjs.org docs on hooks for more info\n    return function() {\n      clearTimeout(goToNext);\n    }\n  })\n\n    // return (\n    //        <div className='slider'>\n    //     <FaArrowAltCircleLeft className='left-arrow' onClick={prevSlide} />\n    //     <FaArrowAltCircleRight className='right-arrow' onClick={nextSlide} />\n    //     {SliderData.map((slide,index) => {\n    //         return (\n    //             <div\n    //                 className={index === current ? 'slide active' : 'slide'}\n    //                 key={index}\n    //             >\n    //             {index === current && (\n    //                 <img src={slide.image} alt='' className='image' />\n    //             )}\n    //             </div>\n    //         );\n    //     })\n\n    //     }\n    // </div>\n    // );\n\n    if (!Array.isArray(slides) || length <= 0) {\n      return null;\n    }\n    \n    return (\n      <section className=\"slider\">\n        {slides.map((s, i) => (\n          <div\n            className={i === curr ? \"slide active\" : \"slide\"}\n            key={s.title}\n            aria-hidden={i !== curr}\n          >\n            <div>\n              <h1>{s.title}</h1>\n              <h2>{s.subtitle}</h2>\n            </div>\n            {i === curr && (\n              <img className=\"image\" src={s.image} />\n            )}\n          </div>\n        ))}\n      </section>\n    );  \n};\n\nexport default ImageSlider;\n","/media/sky/G/webdev/CodeVenture/src/components/imageSlider/imageData.js",[],"/media/sky/G/webdev/CodeVenture/src/components/titleMessage/titlemsg.components.jsx",[],"/media/sky/G/webdev/CodeVenture/src/pages/homepage/particlesOptions.js",[],"/media/sky/G/webdev/CodeVenture/src/pages/about/about.components.jsx",[],"/media/sky/G/webdev/CodeVenture/src/pages/skills/skills.components.jsx",[],"/media/sky/G/webdev/CodeVenture/src/pages/skills/skillsdata.js",[],"/media/sky/G/webdev/CodeVenture/src/pages/contact/contact.components.jsx",[],"/media/sky/G/webdev/CodeVenture/src/components/footer/footer.components.jsx",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":2,"column":20,"nodeType":"70","messageId":"71","endLine":2,"endColumn":31},{"ruleId":"68","severity":1,"message":"72","line":2,"column":33,"nodeType":"70","messageId":"71","endLine":2,"endColumn":42},{"ruleId":"68","severity":1,"message":"73","line":1,"column":15,"nodeType":"70","messageId":"71","endLine":1,"endColumn":23},{"ruleId":"68","severity":1,"message":"74","line":2,"column":9,"nodeType":"70","messageId":"71","endLine":2,"endColumn":29},{"ruleId":"68","severity":1,"message":"75","line":2,"column":30,"nodeType":"70","messageId":"71","endLine":2,"endColumn":51},{"ruleId":"76","severity":1,"message":"77","line":82,"column":15,"nodeType":"78","endLine":82,"endColumn":54},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'useState' is defined but never used.","'FaArrowAltCircleLeft' is defined but never used.","'FaArrowAltCircleRight' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]